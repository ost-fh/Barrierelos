# This file is used for development only and cloned into the local repositories
# It extends the production configuration additional configuration and reset values

services:
  rabbitmq:
    volumes: !reset []
    networks: !reset []
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-barrierelos}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-barrierelos}

  proxy:
    image: geometalab/env-configurable-caddy:latest
    networks: !reset []

  scanner:
    image: !reset ""
    build:
      context: scanner
      dockerfile: ./Dockerfile
    networks: !reset []
    environment:
      - RABBITMQ_HOSTNAME=${RABBITMQ_HOSTNAME:-barrierelos-rabbitmq}
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=${RABBITMQ_USER:-barrierelos}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-barrierelos}
    deploy: !reset {}

  database:
    volumes: !reset []
    networks: !reset []
    ports:
      - "5040:5432"

  backend:
    image: !reset ""
    build:
      context: backend
      dockerfile: ./Dockerfile
    networks: !reset []
    ports:
      - "8030:8030"

  frontend:
    image: !reset ""
    build:
      context: frontend
      dockerfile: ./Dockerfile
    depends_on: !reset []
    networks: !reset []
    extra_hosts:
      # Enables using "host.docker.internal" to access the host machine
      - "host.docker.internal:host-gateway"
    ports:
      - "5555:5000"

networks: !reset {}
