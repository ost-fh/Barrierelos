version: "3.9"

name: barrierelos

networks:
  barrierelos:
    driver: bridge

volumes:
  barrierelos-data: {}

services:
  backend:
    container_name: barrierelos-backend
    build:
      dockerfile: Dockerfile
    image: ch/barrierelos/backend:latest
    ports:
      - "8030:8030"
    environment:
      - spring.datasource.url=jdbc:postgresql://barrierelos-database:5432/barrierelos?stringtype=unspecified
      - spring.rabbitmq.host=barrierelos-rabbitmq
      - spring.rabbitmq.port=5672
      - POSTGRES_USER=barrierelos
      - POSTGRES_PASSWORD=password
    networks:
      - barrierelos
    depends_on:
      - database
      - queue
  database:
    container_name: barrierelos-database
    image: postgres:16.0
    ports:
      - "5040:5432"
    environment:
      - POSTGRES_DB=barrierelos
      - POSTGRES_USER=barrierelos
      - POSTGRES_PASSWORD=password
    networks:
      - barrierelos
    volumes:
      - barrierelos-data:/var/lib/postgresql/data/
  queue:
    container_name: barrierelos-queue
    image: rabbitmq:3.12-management #:3.12
    ports:
      - '5050:5672'
      - '8070:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - barrierelos
    volumes:
      - barrierelos-data:/var/lib/rabbitmq/mnesia/
